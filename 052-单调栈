https://www.nowcoder.com/practice/2a2c00e7a88a498693568cef63a4b7bb

#include<bits/stdc++.h>
using namespace std;

int arr[100009];
int mystack[1000009];
int ans[1000009][2];
void compute(int n)
{
	int r = 0;
	int cur;
	for (int i = 0; i < n; i++)
	{
		while (r > 0 && arr[mystack[r - 1]] >= arr[i])
		{
			cur = mystack[--r];
			ans[cur][0] = r > 0 ? mystack[r - 1] : -1;
			ans[cur][1] = i;
		}
		mystack[r++] = i;
	}
	while (r > 0)
	{
		cur = mystack[--r];
		ans[cur][0] = r > 0 ? mystack[r - 1] : -1;
		ans[cur][1] = -1;
	}
	for (int i = n - 2; i >= 0; i--)
	{
		if (ans[i][1] != -1 && arr[ans[i][1]] == arr[i])
			ans[i][1] = ans[ans[i][1]][1];
	}
}


int main()
{
	int n;
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> arr[i];
	compute(n);
	for (int i = 0; i < n; i++)
		cout << ans[i][0] << " " << ans[i][1] << endl;
}


https://leetcode.cn/problems/daily-temperatures/description/
class Solution {
public:
   
    vector<int> dailyTemperatures(vector<int>& temperatures) {
       int n=temperatures.size();
       vector<int >ans(n);
       vector <int>mystack(n+1);
       int r=0;
       int cur;
        for(int i=0;i<temperatures.size();i++)
â€¦            cur=mystack[--r];
            ans[cur]=0;
        }
        return ans;
    }    
};

