https://leetcode.cn/problems/trapping-rain-water-ii/

typedef  pair<int,int> pii;

class Solution {
public:
    int trapRainWater(vector<vector<int>>& heightMap) {
        int m=heightMap.size();
        int n=heightMap[0].size();
        vector<vector<bool>>visit(m,vector<bool>(n,false));
        priority_queue<pii,vector<pii>,greater<pii>>pq;
        for(int i=0;i<m;i++)
        for(int j=0;j<n;j++)
        {
            if(i==0||j==0||i==m-1||j==n-1)
            {
                visit[i][j]=true;
                pq.push({heightMap[i][j],i*n+j});
            }
        }

        int ans=0;
        int move[5]={-1,0,1,0,-1};
        while(!pq.empty())
        {
            pii cur=pq.top();
            pq.pop();
            for(int k=0;k<4;k++)
            {
                int nx=cur.second/n+move[k];
                int ny=cur.second%n+move[k+1];
                if(nx>=0&&nx<m&&ny>=0&&ny<n&&!visit[nx][ny])
                {   if(cur.first>heightMap[nx][ny])
                    ans+=cur.first-heightMap[nx][ny];
                    visit[nx][ny]=true;
                    pq.push({max(cur. first,heightMap[nx][ny]),nx*n+ny});
                }
            }
        }
        return ans;
    }
};
